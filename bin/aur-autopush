#!/bin/bash
# shellcheck disable=SC2181,SC1091,SC2034
pypi:pkgver()
{
	curl -s "https://pypi.org/pypi/$1/json" | jq -r '.info.version'
}
github:pkgver()
{
	curl -sH "Accept: application/vnd.github.v3+json" "https://${2:-api.github.com}/repos/$1/tags" | jq -r 'if (.[]|length)>0 then .[0].name, halt else null end|.|=sub("v(?<ver>.*)";"\(.ver)")'
}
gitlab:pkgver()
{
	curl -s "https://${2:-gitlab.com}/api/v4/projects/${1//\//%2F}/repository/tags" | jq -r 'if (.[]|length)>0 then .[0].name, halt else null end|.|=sub("v(?<ver>.*)";"\(.ver)")'
}
use_vpn()
{
	local p
	test -n "$USE_VPN" || return 0
	[ "$1" = "c" ] || p="dis"
	echo -ne "vpn: ${p}connecting   \r"
	false
	until (($? == 0)); do
		windscribe "${p}connect" &> /dev/null
	done
	echo "vpn: ${p}connected   "
}
#if ! netcat -zw3 aur.archlinux.org ssh && test -n "$(which --skip-functions --skip-alias windscribe)";then
#	USE_VPN=true
#fi
if (($# == 0)); then
	set -- ./*/
elif [[ $1 == --stdin ]]; then
	shift
	while read -r line; do
		set -- "$@" "$line"
	done
fi
for n in "$@"; do
	if [ -f "$n/PKGBUILD" ] && [ ! -e "$n/WIP" ]; then
		(
			typeset -a exclude
			pkgver=0
			pkgrel=0
			cd "$n" &> /dev/null || exit
			git stash &> /dev/null
			use_vpn c
			git pull
			use_vpn d
			git stash apply &> /dev/null
			git stash drop &> /dev/null
			source ./PKGBUILD
			srcdir=src
			if grep -m 1 -q '^# pkg:' PKGBUILD; then
				type=$(awk '/^# pkg: /{print $3}' PKGBUILD)
				src=$(awk '/^# pkg: /{print $4}' PKGBUILD)
				provider=$(awk '/^# pkg: / && NF > 5 {print $5}' PKGBUILD)
				case $type in
					bzr | git | hg | svn)
						makepkg -o -d --skipchecksums
						PKGVER=$(pkgver)
						;;
					*)
						if [ "$(type -t "$type:pkgver")" = "function" ]; then
							PKGVER=$("$type:pkgver" "${src:-${_name:-${pkgbase:-$pkgname}}}" "$provider")
						else
							PKGVER=0
						fi
						;;
				esac
				if [ "$(vercmp ${PKGVER:-0} $pkgver)" = "1" ]; then
					sed -Ei "s/^(pkgver=)(\"|'|)$pkgver(\"|'|)$/\1\2$PKGVER\3/g;s/^(pkgrel)=.*/\1=1/g" PKGBUILD
					msg="Updated to $PKGVER-1"
				fi
			fi
			echo updating checksums
			updpkgsums -m
			if [ -n "$(git status --porcelain)" ]; then
				if [ -z "$PKGVER" ] || [ "$(vercmp $PKGVER $pkgver)" = "0" ]; then
					sed -Ei "s/^(pkgrel=)[[:digit:]]+$/\1$((pkgrel + 1))/" PKGBUILD
					msg='pkgrel bump.'
				fi
				[ -f ../.nopush ] && msg='nopush: '"${msg:-automatic commmit.}"
				makepkg --printsrcinfo > .SRCINFO
				git add .
				git commit -m "${msg:-automatic push.}"
			fi
			if git status --porcelain --branch | grep -q ahead && [ ! -f ../.nopush ]; then
				use_vpn c
				git push
				use_vpn d
			fi
			for src in "${source[@]}"; do
				if [[ \
					$src =~ ^[[:alnum:].-]+::[[:lower:]]+:// || \
					$src =~ ^[[:alnum:].-]+::[[:lower:]]+\+[[:lower:]+]+:// ]] \
						; then
					exclude+=('-e' "${src%%::*}")
				fi
			done
			fakeroot rm -rf src pkg
			git clean -fxd "${exclude[@]}"
		)
	fi
done
