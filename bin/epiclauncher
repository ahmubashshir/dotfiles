#!/usr/bin/env sh

get_games_list() {
	alert "Downloading games list..." &
	[ -f all_games_data ] || touch all_games_data
	if [ "$(expr $(date +%s) - $(stat -c%Y all_games_data) )" -ge 86400 ] || (($(wc -l all_games_data|cut -d\  -f1)==0));then
		legendary list-games | grep -E '^[[:blank:]]+[*+]' 1>all_games_data || {
			exit 2 && alert "E1: Failed to download games list."
		}
	fi

	legendary list-installed | grep -E '^[[:blank:]]+[*+]' 1>downloaded_games_data || {
		exit 2 && alert "E2: Failed to get info about downloaded games."
	}


	# get games official names
	get_official_names "all_games_data" "$(wc -l < all_games_data)" "games_names"
	get_official_names "downloaded_games_data" "$(wc -l < downloaded_games_data)" "downloaded_games_names"

	# get games names from store (maybe codenames? idk)
	get_store_names "all_games_data" "store_names"
	get_store_names "downloaded_games_data" "downloaded_store_names"
}

clear_cache() {
	return
	[ "$(pwd)" = "$CACHE" ] && {
		rm -f all_games_data all_games_data_f

		rm -f games_names store_names

		rm -f downloaded_games_data downloaded_games_data_f
		rm -f downloaded_games_names downloaded_store_names
	}
}

format_data() {
	true > "$3"
	i=1; while [ $i -le "$2" ]
	do
		var=$(sed -n "$i"p "$1" | cut -b 4-)
		echo "${var%%\,*}" >> "$3"

		i=$((i+1))
	done
}

get_official_names() {
  true > "$3"
	i=1; while [ $i -le "$2" ]
  do
  	sed -nE "$i{s/ [*+] (.*) \(.*/\1/p}" "$1" >> "$3"
  	i=$((i+1))
  done
}

get_store_names() {
	sed -E "s/.*name: (.*) \| V.*/\1/" "$1" > "$2"
}

show_games() {
	menu_lines="$(wc -l < "$3")"
	[ "$menu_lines" -gt 30 ] && menu_lines=30
	game=$(m -l "$menu_lines" -p "$1" < "$2")
	[ ! "$game" ] && { clear_cache; exit 1; }
	line_number="$(grep -n "$game$" "$2" | cut -d : -f 1)"
	game_store_name=$(sed -n "$line_number"p "$3")
}

run_game() {
	legendary launch "$1"
}
install_game() {
	echo Installing $1
	if tty -s;then
		legendary install $1
	else
		exo-open --launch TerminalEmulator legendary install $1
	fi
}
# clear cache when process is killed
trap clear_cache 2

CACHE="$HOME/.cache/rofi-epiclauncher"
mkdir -p "$CACHE"
cd "$CACHE" || {
	exit 2 && echo "E3: Failed to change directory.";
}

m() { rofi -dmenu -i "$@"; }
alert() { rofi -e "$@"; }

get_games_list && pkill rofi

mode="$(
	printf "Downloaded games\nAll games" | m -l 2 -p "What do you want to see?"
)"

if [ "$mode" = "Downloaded games" ]; then
	show_games "Downloaded games"	"downloaded_games_names" "downloaded_store_names"
elif [ "$mode" = "All games" ]; then
	show_games "All games on account" "games_names" "store_names"
else clear_cache; exit 1; fi
if grep -wq "$game_store_name" downloaded_store_names;then
	run_game "$game_store_name"
else
	install_game "$game_store_name"
fi

clear_cache; exit 0
