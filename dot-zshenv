#!/bin/zsh
emulate sh -c 'source /etc/profile'
if [ -f $HOME/.shell/environment ]; then
	emulate sh -c 'source '$HOME'/.shell/environment'
fi
if [ -f $HOME'/.profile' ];then
	emulate sh -c 'source '$HOME'/.profile'
fi
unfunction appendpath
zcompile()
{
	sed -E 's/^\./dot-/;s/(.*)/zcompile: \1/' <<<$argv[-1]:t >&2
	builtin zcompile "$@"
}
if [ ! -d ~/.cache/zsh ];then
	rm -f ~/.cache/zsh
	mkdir -p ~/.cache/zsh
fi
if [[ -o interactive ]];then
	function TRAPPOLL {
		compinit -C
		[ -r $HOME/.zsh/compdef ] && source $HOME/.zsh/compdef
	}
	autoload -Uz compinit
	YSU_MESSAGE_POSITION=after
	YSU_HARDCORE=1
	YSU_MESSAGE_FORMAT="$(print -P %B%F{cyan})Use \"$(print -P %F{blue})%alias$(print -P %F{cyan})\", $(print -P %F{red})you little shit!$(print -P %b%f)"
fi
# Traps
function TRAPUSR1 { rehash; }

# misc functions
function zcompinit {
	if [[ -o interactive ]];then
		compinit $@
		[[ $* =~ -[[:alnum:]]*C ]] || {
			local n k
			for n in $fpath[@];do
				if [[ -f $n ]] && [[ -w $n:P:h ]];then
					zcompare "$n"
				elif [[ -d $n ]] && [[ -w $n ]];then
					for k in "$n"/^*.zwc(^/);do
						zcompare "$k"
					done
				fi
			done
			sleep 0.5
			[ -d $$ ] && kill -POLL $$
		} &!
	fi
}

function safe-source {
	if [ -f "$1" ];then
		source "$@"
	fi
}
function zrecompile_start {
	for n in ~/.z{shrc,shenv,login,login,profile,inputrc,sh/compdef};do
		if [ -f $n ];then
			zcompare $n -Rz &!
		fi
	done
}
function zcompare {
	if [[ -w $1:P:h ]] && [[ -s ${1} && ( ! -s ${1}.zwc || ${1} -nt ${1}.zwc) ]]; then
		zcompile "${@:2}" "$1"
	fi
}

function bashcompadd {
	for n in "$@";do
		if [ -f "/usr/share/bash-completion/completions/$n" ];then
			source "/usr/share/bash-completion/completions/$n"
		fi
	done
}
safe-source /usr/share/doc/pkgfile/command-not-found.zsh
