#!/bin/bash
function fork_setup
{
	default=$(
		git remote show upstream 2>&3 \
			| grep "HEAD branch" \
			| awk '{print	$3}'
	)

	git config branch.$default.remote upstream
	git config branch.$default.pushRemote origin
	git config remote.pushDefault origin
	case "$1" in
		gh)
			git remote get-url upstream \
				| cut -d/ -f4- \
				| xargs gh repo set-default
			;;
	esac
	echo "configured the fork" >&2
}

function gh_fork
{
	gh repo fork --remote --remote-name origin "$@"
}

function gl_fork
{
	:
}

if ! git remote | grep -xqw upstream; then
	git remote rename origin upstream
	if git remote get-url upstream \
		| grep -xqE '(https://|git@)github\.com(/|:)[[:alnum:]_-]+/[[:alnum:]_-]+(\.git|$)'; then
		case $(git config --get user.email) in
			ahmubashshir@*) gh_fork --org ahm-forks "$@" ;;
			*)   gh_fork "$@" ;;
		esac
	elif git remote get-url upstream \
		| grep -xqE '(https://|git@)gitlab\.com(/|:)[[:alnum:]_-]+/[[:alnum:]_-]+(\.git|$)'; then
		gl_fork "$@"
	fi
	if ! git remote | grep -xqw origin; then
		git remote rename upstream origin
		echo "Failed to fork" >&2
		exit
	fi
	fork_setup gh
elif git remote | grep -xqw upstream; then
	echo "Already has upstream" >&2
	fork_setup gh
else
	echo "No upstream remote available" >&2
fi
