#!/bin/bash
# [Gedit Tool]
# Name=Build
# Languages=
# Input=nothing
# Output=output-panel
# Applicability=titled
# Save-files=nothing
# Shortcut=<Alt>F5

tool=""
builddir=""
run()
{
	{
		printf '+'
		printf ' %q' "$@"
		printf '\n'
	} >&2
	"$@"
}

try()
{
	target=$(
		find . -maxdepth "${2:-3}" -name "$1" -printf '%d %p\0' \
			| sort -zn \
			| sed -znE '1s/^[0-9]+ //p' \
			| tr -s '\0' '\n'
	)

	[[ -z $target ]] && return 1
	IFS= read -r targetdir < <(dirname -z "$target" | xargs -0 realpath)
	builddir="$targetdir-build"

	case "$1" in
		pom.xml)
			unset builddir
			cd "$targetdir"
			run mvn compile package
			exit
			;;
		configure.ac)
			cd "$targetdir"
			if [[ configure.ac -nt configure ]] || [[ Makefile.am -nt Makefile.in ]]; then
				autoreconf --verbose --install --force
			fi
			if [[ Makefile.am -nt "$builddir/Makefile" ]] || ! [[ -f "$builddir/Makefile" ]]; then
				mkdir -p "$builddir"
				cd "$builddir"
				"$targetdir/$target"
			fi

			tool='make'
			;;
		autogen.sh | configure)
			tool='make'
			if [[ Makefile.am -nt "$builddir/Makefile" ]] || ! [[ -f "$builddir/Makefile" ]]; then
				mkdir -p "$builddir"
				cd "$builddir"
				"$targetdir/$target"
			fi
			;;
		CMakeLists.txt)
			tool='make'
			run cmake -S "$targetdir" -B "$builddir"
			;;
		meson.build)
			tool='ninja'
			run meson --wipe "$builddir" "$targetdir"
			;;
		Makefile)
			unset builddir
			tool='make'
			;;
		*) exit 1 ;;
	esac
	return 0
}

GIT_ROOT=$(git rev-parse --show-toplevel 2> /dev/null)

if [[ -n $GIT_ROOT ]]; then
	cd "$GIT_ROOT" || exit
fi

false \
	|| try Makefile \
	|| try meson.build \
	|| try configure.ac \
	|| try configure \
	|| try autogen.sh \
	|| try CMakeLists.txt \
	|| try pom.xml 25 \
	|| :

[[ $tool && ${builddir:-$targetdir} ]] || {
	echo "Unknown build tool..." >&2
}

run "$tool" -C "${builddir:-$targetdir}"
