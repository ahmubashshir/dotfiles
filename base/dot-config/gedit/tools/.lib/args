#!/bin/bash
export TERM=dumb
declare -ga args files

TYPE=${GEDIT_CURRENT_DOCUMENT_TYPE#*/}
NAME=${GEDIT_CURRENT_DOCUMENT_NAME}
DIR=${GEDIT_CURRENT_DOCUMENT_DIR}
files=("$NAME")

__hint()
{
	while [[ $1 ]]; do
		echo " HINT: $1"
		shift
	done >&2
}

__error()
{
	while [[ $1 ]]; do
		echo "ERROR: $1"
		shift
	done >&2
}

get_help()
{
	cat >&2 << EOF
Usage:
   :arg           -> arg
   @option  [arg] -> --option [arg]
   @-option [arg] -> -option  [arg]
   #helper  [arg]
    ->  Modify environment by running
        <helper> with [arg]
EOF
	((${#HELPERS[@]} == 0)) || {
		printf '    -> available helpers:\n'
		printf '       -> %s\n' "${HELPERS[@]}"
	} >&2
	exit
}
declare -A _ignored
for flg in "${ignored[@]}"; do
	_ignored["$flg"]=1
done

declare -i compiler_hints
while read -r type flag arg; do
	[[ $flag ]] || continue

	if [[ $type = : && -z "$filter" ]]; then
		filter="$flag:"
	elif [[ -z "$filter" && -n "$FILTER" ]]; then
		filter="$FILTER:"
	fi
	flag="${flag#"$filter"}"

	[[ -z "$filter" || ! $flag =~ ^[^-]+: || $flag =~ ^$filter ]] || continue
	[[ -z "${_ignored["$flag"]}" ]] || continue

	if [[ $type = \# && $(type -t "get_$flag") = function ]]; then
		"get_$flag" "$arg"
	else
		if [[ $flag =~ ^- ]]; then
			args+=("$flag")
		elif [[ $type == : ]]; then
			args+=("$flag")
		else
			args+=("--$flag")
		fi
		if [[ -n $arg ]]; then
			args+=("$(envsubst <<< "${arg/\~/$HOME}")")
		fi
	fi

	((++compiler_hints)) && echo "$type $flag $arg" >&2
done < <(
	TYPE='@|:|#'
	FILTER='-?\w+ ?.+?'
	PREFIX='[ \*]+'
	sed -nE -e 's%^//'"$PREFIX"'('"$TYPE"')('"$FILTER"')$%\1 \2%p' \
		-e '/^\/\*/,/\*\/$/s/^\/?'"$PREFIX"'('"$TYPE"')('"$FILTER"')$/\1 \2/p' "$NAME" | tr -d '\r'
)

unset -f

if ((compiler_hints == 0)); then
	__hint "Add '#help' as a comment to see tool help"
fi
