#!/bin/zsh
skip_global_compinit=1

fpath=(
	${ZDOTDIR:-$HOME/.zsh}/functions
	${ZDOTDIR:-$HOME/.zsh}/functions/compdefs
	$fpath
)
ZSH_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/zsh"
ZSH="$ZDOTDIR/omz"

() {
	[[ "${HOST:r}" == "$HOST" ]] || ZSH_COMPDUMP="${${HOST:r}/#%distrobox-[a-zA-Z0-9]*/distrobox-ephemeral}"
	if [[ $ZSH_COMPDUMP == distrobox-ephemeral ]]; then
		ZSH_COMPDUMP=/tmp/zsh/compdump
	else
		ZSH_COMPDUMP="$ZSH_CACHE_DIR/${ZSH_COMPDUMP+$ZSH_COMPDUMP/}compdump"
	fi
	[[ -d ${ZSH_COMPDUMP:a:h} ]] || mkdir -p ${ZSH_COMPDUMP:a:h}
}

function compinit {
		local body
		body=$functions[compinit]
		unfunction compinit
		autoload -Uz compinit
		compinit -d "$ZSH_COMPDUMP" "$@"
		functions[compinit]=$body
}

if [[ -o interactive ]];then
	autoload -Uz zcompare
else
	function zcompare {
		if [[ -w $1:P:h ]] && [[ -s "$1" && ( ! -s "$1.zwc" || "$1" -nt "$1.zwc" ) && ! -f "$1.ignore.zwc" ]]
		then
			zcompile "${@:2}" "$1"
		fi
	}
fi

function load {
	local each from
	from=$1;shift
	for each in "$@";do
		[[ ! -d "${ZDOTDIR:-$HOME/.zsh}/$from.d/$each" ]] || each="$each/load"
		[[ -f "${ZDOTDIR:-$HOME/.zsh}/$from.d/$each" ]] || continue
		Z_COMPILE_TARGET="$from/$each" zcompare "${ZDOTDIR:-$HOME/.zsh}/$from.d/$each" -UMz
		source "${ZDOTDIR:-$HOME/.zsh}/$from.d/$each"
	done
}

if [ ! -d ~/.cache/zsh ];then
	rm -f ~/.cache/zsh
	mkdir -p ~/.cache/zsh
fi
# Traps
function TRAPUSR1 { rehash; }

unfunction zcompare
