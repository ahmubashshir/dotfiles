#!/bin/zsh
function zplug:post:zinsults {
	zinsults_load=('default' 'shakespeare')
}

function zplug:post:autoswitch_virtualenv {
	VIRTUAL_ENV_DISABLE_PROMPT=1
}

function zplug:post:fast-syntax-highlighting {
	((${+aliases[fsh-alias]})) && \
	unalias fsh-alias
}

function zplug:pre:hacker-quotes {
	ZSH_HACKER_QUOTES_ENABLE_WHEN_INTERACTIVE=1
}

function zplug:post:hacker-quotes {
	unset ZSH_HACKER_QUOTES_ENABLE_WHEN_INTERACTIVE
}

function zplug:post:bd {
	local each
	for each in .. ... ....; do
		[[ -z $aliases[$each] ]] || unalias $e
	done
}

function zplug:post:auto-notify {
	AUTO_NOTIFY_THRESHOLD=20
	AUTO_NOTIFY_EXPIRE_TIME=5000
	AUTO_NOTIFY_WHITELIST=()
	AUTO_NOTIFY_IGNORE+=(
		man info
		gcc g++ pbi wormhole
		shit danime git
		nano xed gedit vi vim
		vlc mpv celluloid
		yay pacman bc
	)
}

function zplug:post:autosuggestions {
	ZSH_AUTOSUGGEST_STRATEGY=(history completion)
	ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
}

function zplug:post:you-should-use {
	YSU_MESSAGE_POSITION=after
#	YSU_HARDCORE=1
	YSU_MESSAGE_FORMAT="$(print -P %B%F{cyan})Use \"$(print -P %F{blue})%alias$(print -P %F{cyan})\", $(print -P %F{red})you little shit!$(print -P %b%f)"
	function ysu:start { enable_you_should_use; }
	function ysu:stop { disable_you_should_use; }
	function ysu:stat {
		echo YSU Stats
		check_alias_usage 2>&1|grep -v 'entry='
	}
}

function zplug:post:zshmarks {
	alias jmp=jump
	alias mark=bookmark
	alias unmark=deletemark
	alias lsmark=showmarks
}

function zplug:post:history-substring-search {
	bindkey "$terminfo[kcuu1]" history-substring-search-up
	bindkey "$terminfo[kcud1]" history-substring-search-down
}

function zplug:post:command-time {
	ZSH_COMMAND_TIME_MSG="Execution time: %s"
	ZSH_COMMAND_TIME_COLOR=cyan
}

function zplug:post:gitstatus-async {
	GITSTATUS[seperator]="${ENV[prompt_seperator]}"
	GITSTATUS[prefix]="${ENV[prompt_prefix]}"
	GITSTATUS[suffix]="${ENV[prompt_suffix]}"
}

function zplug:post:devprompt {
	DEVPROMPT[seperator]="${ENV[prompt_seperator]}"
	DEVPROMPT[prefix]="${ENV[prompt_prefix]}"
	DEVPROMPT[suffix]="${ENV[prompt_suffix]}"
}

function zplug:pre:git {
	source $ZDOTDIR/omz/lib/git.zsh
}

function zplug:pre:z {
	ZSHZ_NO_RESOLVE_SYMLINKS=1
	ZSHZ_DATA="${XDG_STATE_HOME:-$HOME/.local/state}/zsh/dirs"
	ZSHZ_CMD=d
	ZSHZ_CASE=smart
}

function zplug:pre:dotenv {
	ZSH_DOTENV_ALLOWED_LIST="${XDG_STATE_HOME:-$HOME/.local/state}/zsh/dotenv/allowed"
	ZSH_DOTENV_DISALLOWED_LIST="${XDG_STATE_HOME:-$HOME/.local/state}/zsh/dotenv/denied"
}

function zplug:post:dotenv {
	alias dotenv=source_env
}

function zplug:post:nix {
	fpath=($zsh_loaded_plugins[nix] $fpath)
}

function zplug:post:fzf-tab {
	# set descriptions format to enable group support
	# NOTE: don't use escape sequences here, fzf-tab will ignore them
	zstyle ':completion:*:descriptions' format '[%d]'

	# set list-colors to enable filename colorizing
	zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

	# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
	zstyle ':completion:*' menu no

	# preview directory's content with eza when completing cd
	zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'

	# switch group using `<` and `>`
	zstyle ':fzf-tab:*' switch-group '<' '>'

	zstyle ':fzf-tab:*' fzf-bindings 'space:accept'

	zstyle ':fzf-tab:complete:reboot-to:*' disabled-on any
}
