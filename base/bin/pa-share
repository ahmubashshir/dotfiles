#!/bin/bash
# lock to a single process.
lockfile="${XDG_RUNTIME_DIR:-/run/user/$UID}/share.lck"
exec 99> "$lockfile"
lock()
{
	flock -$1 99
}
lock xn || {
	echo "Another process is running."
	exit
}

# Special thanks to https://askubuntu.com/a/421056
# This script was implemented from aforementioned answer :3
trap 'die' TERM EXIT QUIT ABRT

die()
{
	# unlock
	lock u
	lock xn && rm -f "$lockfile"

	# restore defaults
	pactl set-default-source "$default_source"

	for mod in $local_sink $share_sink "${loopback[@]}"; do
		pactl unload-module "$mod"
	done
}

loopback=()
default_source=$(
	pactl info \
		| awk '/^Default Source/{print $3}'
)

default_sink=$(
	pactl info \
		| awk '/^Default Sink/{print $3}'
)

local_sink=$(
	pactl load-module \
		module-null-sink \
		"sink_name=local-sink" \
		"sink_properties=device.description=LocalSink"
)
share_sink=$(
	pactl load-module \
		module-null-sink \
		"sink_name=share-sink" \
		"sink_properties=device.description=ShareSink"
)

if ((share_sink && local_sink)); then
	mapfile -t loopback < <(
		# remap share-sink.monitor to share-source
		pactl load-module module-remap-source "master=share-sink.monitor" \
			"source_name=share-source" source_properties="device.description=ShareSource"
		pactl set-default-source share-source
		# create loopbacks
		pactl load-module module-loopback \
			"adjust_time=6" "latency_msec=60" "source=$default_source" "sink=share-sink" \
			"sink_dont_move=yes"
		pactl load-module module-loopback \
			"adjust_time=6" "latency_msec=60" "source=local-sink.monitor" "sink=share-sink" \
			"source_dont_move=yes" "sink_dont_move=yes"
		pactl load-module "module-loopback" \
			"adjust_time=6" "latency_msec=60" "source=local-sink.monitor" "sink=$default_sink" \
			"source_dont_move=yes"
	)
	echo "Set Player output to \"LocalSink\" in pavucontrol."
	echo ""

	(
		exec &> /dev/null
		pavucontrol &
	)

	echo "Press CTRL+C when done."
	read -s -r -d '' _
fi
