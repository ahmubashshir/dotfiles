#!/bin/bash

[[ $(bootctl is-installed) == "yes" ]] || {
	printf "error: systemd-boot is not installed"
	exit 1
}

ID=$(awk -v FS== '/^ID=/{print $2}' /etc/os-release)
targets=()
if [[ $1 ]]; then
	case $1 in
		windows) entry=auto-windows ;;
		shell) entry=auto-efi-shell ;;
		firmware) entry=auto-reboot-to-firmware-setup ;;
		linux-*) entry="$ID-$1.conf" ;;
		*) entry="$1.conf" ;;
	esac
	if bootctl list | grep -q '^[[:blank:]]*id: '"$entry"; then
		printf 'Rebooting to %s\n' "$1"
		exec systemctl reboot --boot-loader-entry="$entry"
	fi
else
	if tty -s; then
		if tput setaf 0 > /dev/null 2>&1; then
			ALL_OFF="$(tput sgr0)"
			BOLD="$(tput bold)"
			BLUE="${BOLD}$(tput setaf 4)"
			GREEN="${BOLD}$(tput setaf 2)"
			RED="${BOLD}$(tput setaf 1)"
			YELLOW="${BOLD}$(tput setaf 3)"
		else
			ALL_OFF="\e[0m"
			BOLD="\e[1m"
			BLUE="${BOLD}\e[34m"
			GREEN="${BOLD}\e[32m"
			RED="${BOLD}\e[31m"
			YELLOW="${BOLD}\e[33m"
		fi
	fi
	printf "%sReboot targets:%s\n" "$BOLD" "$ALL_OFF"
	mapfile -t targets < <(
		bootctl list | sed -nE '/^[[:blank:]]*id: /{
			s/^.*id: (.*)/\1/
			s/\.conf$//g
			s/^('"$ID"'|auto)-//g
			s/efi-(shell)/\1/
			s/reboot-to-(firmware)-setup/\1/
			p
		}' | sort \
			| awk '!/^(shell|firmware)$/;/^(shell|firmware)$/ {d[i++]=$1};END{for(i in d)print d[i]}'
	)
	bootdir=$(bootctl -x)
	espdir=$(bootctl -p)
	for each in ${targets[@]}; do
		case $each in
			windows)
				printf '%s\t--\t%s\n' \
					"${GREEN}${each}${ALL_OFF}" \
					"${BLUE}Windows Boot Manager${ALL_OFF}"
				;;
			shell)
				printf '%s\t--\t%s\n' \
					"${YELLOW}${each}${ALL_OFF}" \
					"${RED}EFI Shell${ALL_OFF}"
				;;
			firmware)
				printf '%s\t--\t%s\n' \
					"${YELLOW}${each}${ALL_OFF}" \
					"${RED}EFI Settings${ALL_OFF}"
				;;
			*)
				source=$(
					bootctl list \
						| if [[ $each =~ ^linux-* ]]; then
							awk '/^\s+id: '"$ID-$each.conf"'/,/^$/ { if($1 == "source:") print $2}'
						else
							awk '/^\s+id: '"$each.conf"'/,/^$/ { if($1 == "source:") print $2}'
						fi
				)
				case $source in
					${bootdir}*) fsroot="$bootdir" ;;
					${espdir}*) fsroot="$espdir" ;;
					/sys/*) continue ;;
					*) fsroot='' ;;
				esac
				while read -r file; do
					if [ ! -f "$fsroot$file" ]; then
						continue 2
					fi
				done < <(
					awk '/^(initrd|linux|efi)/ {print $2}' "$source"
				)
				title=$(awk '/^title/ {for (i=2; i<NF; i++) printf $i " "; print $NF}' "$source")
				printf '%s\t--\t%s\n' \
					"${GREEN}${each}${ALL_OFF}" \
					"${BLUE}${title}${ALL_OFF}"
				;;
		esac
	done | column -t -s $'\t'
fi
