#!/bin/bash
NAME=${NAME:-${0##*/}}
REPO=${REPO:-${NAME:-${0##*/}}}
EXTRACT=${EXTRACT:-1}
FILTER=${FILTER:-.}
exec=$(env which "$NAME" -a 2> /dev/null | grep -v "^$HOME" | head -n1)
if [[ -z $exec ]]; then
	last_modified=0
	diff=0
	mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}/bin"
	exec="${XDG_CACHE_HOME:-$HOME/.cache}/bin/$NAME"
	if [[ -f $exec ]]; then
		last_modified="$(stat -c%Y "$exec")"
		date_now="$(date +%s)"
		diff=$((date_now - last_modified))
	fi
	if ! [[ -f "$exec" && -s "$exec" ]] \
		|| ! "$exec" --help &> /dev/null \
		|| ((diff > 60 * 60 * 24 && last_modified != 0)); then
		touch "$exec"
		relinfo=$(
			timeout 0.3 ping -c 1 1.0.0.1 &> /dev/null \
				&& curl --netrc -s --disable \
					"https://api.github.com/repos/$OWNER/$REPO/releases/latest"
		)
		if [[ -n $relinfo ]]; then
			rtver=$(
				printf '%s' "$relinfo" \
					| jq -r '.tag_name'
			)
			rtver="${rtver#*v}"
			if ! declare -Fp version |& grep -q '^declare -f'; then
				version()
				{
					"$exec" --version
				}
			fi
			[[ ! -x $exec ]] || ltver=$(
				version \
					| grep -oEm1 '\s*v?[[:digit:]][[:digit:].-]+' \
					| sed 's/^[^[:digit:]]*//;s/[[:punct:][:blank:]]*$//'
			)
			unset -f version
			[[ -n $ltver ]] || ltver=0.0.0

			filter='.assets[]|select(type == "object")'
			filter()
			{
				test -n "$1" && filter+="|select(.name|test(\"(?i)$1\"))"
			}

			arch=${ARCH-$(uname -m)}
			os=${OS-$(uname -s)}

			case "$arch" in
				arm) abi=gnueabihf ;;
				x86_64) arch="x86_64|amd64|${os}64" ;;
			esac
			filter "$arch"
			filter "$os"
			filter "$abi"
			filter "$FILTER"

			if ! [[ -f $exec && $(printf '%s\n' "$ltver" "$rtver" | sort -V | head -n 1) == "$rtver" ]]; then
				if [[ $ltver == 0.0.0 ]]; then
					echo >&2 "Downloading ${0##*/}: $rtver"
				else
					echo >&2 "Updating ${0##*/}: $ltver -> $rtver"
				fi
				file=$(mktemp /tmp/bin.XXXXXXXX)
				trap 'rm -f $file' TERM QUIT EXIT INT
				data="$(
					printf '%s' "$relinfo" | jq "$filter"
				)"
				if ((EXTRACT)); then
					data=$(
						printf '%s' "$data" \
							| jq 'select(.name|test("(?i).'"${ARCHIVE:-tar}"'"))'
					)
				fi
				if curl --disable --fail -L -# "$(
					printf '%s' "$data" \
						| jq -r '.browser_download_url' \
						| head -n 1
				)" -o "$file"; then
					if ((EXTRACT)); then
						bsdtar -xOf "$file" "${FILE:-$(
							bsdtar -tvf "$file" \
								| rev | cut -d ' ' -f1 \
								| rev | grep -iE "(^|/)$NAME(-($os|$arch))*$"
						)}"
					else
						cat "$file"
					fi > "$exec"
					chmod +x "$exec"
					rm -f "$file"
					trap - TERM QUIT EXIT INT
				fi
			fi
		else
			printf "%s: can't check for update.\n" "$NAME"
		fi
	fi
fi

if [[ -x "$exec" && -s "$exec" ]]; then
	if [[ x$(typeset -p DEFAULT_ARGS 2> /dev/null | awk '{print $2}') != x-a ]]; then
		unset -v DEFAULT_ARGS
		declare -a DEFAULT_ARGS
	fi
	exec -a "$NAME" "$exec" "${DEFAULT_ARGS[@]}" "$@"
else
	! [[ -f $exec && $exec =~ ^${XDG_CACHE_HOME:-$HOME/.cache}/bin ]] || rm -f "$exec"
	printf "%s: command not found.\n" "$NAME"
	exit 1
fi
