#!/bin/bash
NAME=${NAME:-${0##*/}}
REPO=${REPO:-${NAME:-${0##*/}}}
EXTRACT=${EXTRACT:-1}
FILTER=${FILTER:-.}
VERCHK=${VERCHK:---version}
AUTO_UPDATE=${AUTO_UPDATE:-1}
MACHINE="$(getmachine)"
BINDIR="${XDG_CACHE_HOME:-$HOME/.cache}/bin/$MACHINE"
exec=$(
	env which -a "$NAME" 2> /dev/null \
		| grep -v "^${BASH_SOURCE%/lib/git-rel}" \
		| head -n1
)

function do_as_root
{
	if command -pv sudo 2> /dev/null >&2; then
		sudo "$@"
	elif command -pv doas 2> /dev/null >&2; then
		doas "$@"
	elif command -pv su 2> /dev/null >&2; then
		su root -- -c 'exec "$@"' -- "$@"
	else
		cat >&2 << EOF
warning: no su helpers found, run the below text as root
"$@"
EOF
	fi
}

function apply_caps
{
	# shellcheck disable=SC2153
	if ((${#CAPS[@]} > 0)); then
		read -r caps < <(
			printf 'cap_%s\n' "${CAPS[@]}" \
				| sort -d \
				| xargs \
				| tr -s ' ' ','
		)
		if ! [[ $(getcap "$exec") == "$exec $caps=ep" ]]; then
			echo ":: setcap($NAME, ${caps//,/|})" >&2
			do_as_root setcap "$caps=ep" "$exec"
		fi
	fi
}

if [[ -z $exec ]]; then
	last_modified=0
	diff=0
	mkdir -p "$BINDIR"
	exec="$BINDIR/$NAME"
	if [[ -f $exec ]]; then
		last_modified="$(stat -c%Y "$exec")"
		date_now="$(date +%s)"
		diff=$((date_now - last_modified))
	fi

	if ! [[ -f "$exec" && -s "$exec" ]] \
		|| ! "$exec" --help &> /dev/null \
		|| ((diff > 60 * 60 * 24 && last_modified > 0 && AUTO_UPDATE)); then
		source "${BASH_SOURCE}-fetch"
	fi
	apply_caps
fi

[[ "$(declare -p ARGS 2> /dev/null)" =~ ^("declare -a ARGS="|$) ]] || unset -v ARGS
if [[ -x "$exec" && -s "$exec" ]]; then
	exec -a "$NAME" "$exec" "${ARGS[@]}" "$@"
elif [[ "$FALLBACK" && -x "$FALLBACK" ]]; then
	exec -a "${FALLBACK##*/}" "$FALLBACK" "$@"
else
	! [[ -f $exec && $exec =~ ^$BINDIR ]] || rm -f "$exec"
	printf "%s: command not found.\n" "$NAME"
	exit 1
fi
