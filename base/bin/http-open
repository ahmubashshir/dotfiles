#!/bin/bash
# variables
# default apps
: "${MEDIA_PLAYER:=mpv}"
: "${WIKIPEDIA_APP:=wike}"
# default env
: "${XDG_CACHE_HOME:=$HOME/.cache}"
: "${XDG_CONFIG_HOME:=$HOME/.config}"
: "${XDG_RUNTIME_DIR:=/run/user/$UID}"
: "${XDG_DATA_HOME:=$HOME/.local/share}"

URL="$1"
shift

declare -A urlre=(
	['youtube']='^https?://(www\.)?youtu(\.be/|be\.com/(watch\?(.+&)?v=|playlist\?list=|live/|shorts/))[a-zA-Z0-9_-]+($|&.*$|\?.*$)'
	['ytshorts']='/(live|shorts)/'
	['redd.it']='https?://redd.it/'
	['wikipedia']='^https?://((www|[a-z]{2})\.)?(m\.)?wikipedia\.org/wiki/.+'
	['goolag']='^(https?://([a-z]+\.google(apis|)\.com|(([a-z]+\.)?app\.|)goo\.gl)(/.*)?|https?://(app\.)?convay\.com/m/j/[0-9]+/[a-z0-9]+(\?pwd=[a-z0-9]+)?)$'
	['zoom']='zoom\.us/j/'
)

abort()
{
	notify-send -e -u critical \
		-a "HTTP(S) URL Handler" \
		-i internet-web-browser \
		"HTTP(S) URL Handler" \
		"Error: $1"
	exit 1
}

warn()
{
	notify-send -e -u normal \
		-a "HTTP(S) URL Handler" \
		-i internet-web-browser \
		"HTTP(S) URL Handler" \
		"Warning: $1"
	return 1
}

match/url()
{
	grep -Eq "${urlre["$1"]}" <<< "$URL" || return 1
	declare -F "handlers/$1" > /dev/null || return 1
	((HANDLED)) || HANDLED=1 "handlers/$1"
}

match/bin()
{
	if ! command -pv "$1" > /dev/null; then
		! [[ $ERROR == "abort" ]] || abort "Command not found: $1"
		warn "Command not found: $1"
	fi
}

handlers/youtube()
{
	match/bin "$MEDIA_PLAYER" || return 0
	! match/url ytshorts || URL="${URL##*/}"
	case "$MEDIA_PLAYER" in
		mpv)
			mkdir -p "$XDG_RUNTIME_DIR/mpv"
			exec mpv \
				--script-opts=ontop-enable=no \
				--player-operation-mode=pseudo-gui \
				--cache-dir="$XDG_RUNTIME_DIR/mpv" \
				--cache=yes --cache-on-disk \
				--cache-unlink-files=whendone \
				--cache-pause-initial \
				-- "$URL"
			;;
		*pipe-viewer)
			exec "$MEDIA_PLAYER" --std-input=:q "$URL"
			;;
		*) exec "$MEDIA_PLAYER" "$URL" ;;
	esac
}

handlers/redd.it()
{
	declare -g URL="https://www.reddit.com/comments/${URL##*/}"
}

handlers/wikipedia()
{
	match/bin "$WIKIPEDIA_APP" || return 0
	case "$WIKIPEDIA_APP" in
		wike) exec wike -u "$URL" ;;
		*) exec "$WIKIPEDIA_APP" "$URL" ;;
	esac
}

handlers/goolag()
{
	ERROR=abort match/bin chromium
	local class
	class="$(sed -nE 's#^.+://(\w+)\.(google)\.com/.*$#\2-\1#p' <<< "$URL")"
	exec chromium --app="$URL" --class="${class:-google-chrome}"
}

handlers/zoom()
{
	ERROR=abort match/bin zoom
	local meeting
	local -I URL
	read -r meeting < <(
		URL=${URL#*://}
		PASS=${URL##*/}
		exec 2> /dev/null 0<&2
		curl "https://$URL" -s \
			| sed -nE 's|^.*\bwindow\.launchBase64\s*=\s* "([A-Za-z0-9+/=]+)"\s*\;.*$|\1|p' \
			| base64 -d | xxd -p -c0 \
			| sed -nE 's|^.*8a016[0-9a-f](.+)920120(.+)d20125(.+)$|757469643d\3267573733d\1267469643d\20a|p' \
			| xxd -p -c0 -r | base64 -w0 \
			| perl -MURI::Escape -wlne 'print uri_escape $_' \
			| xargs printf 'zoommtg://%s/join?action=join&confno=%s&confid=%s\n' "${URL%%/*}" "${PASS//\?/\&}"
	)
	[[ "$meeting" ]] && exec zoom "$meeting"
}

DENTRY()
{
	local -a cm bs xf
	cm=('[Desktop Entry]'
		'Icon=internet-web-browser'
		'Name=HTTP(S) URL Handler')

	bs=('Comment=Open HTTP(S) URLs with appropriate apps'
		'GenericName=Open HTTP(S) URLs with appropriate apps'
		'Type=Application'
		'TryExec=/usr/bin/qutebrowser'
		'Exec=http-open %U')
	xf=('Type=X-XFCE-Helper'
		'X-XFCE-Category=WebBrowser'
		'X-XFCE-CommandsWithParameter=http-open "%s"'
		'X-XFCE-Commands=http-open')

	local desktop="${XDG_DATA_HOME:-$HOME/.local/share}/applications/http-open.desktop"
	local exodent="${XDG_DATA_HOME:-$HOME/.local/share}/xfce4/helpers/http-open.desktop"
	[[ -f $desktop ]] || printf '%s\n' "${cm[@]}" "${bs[@]}" > "$desktop"
	[[ -f $exodent ]] || printf '%s\n' "${cm[@]}" "${xf[@]}" > "$exodent"
}

QBCALL()
{
	local config cache data base
	base="$XDG_RUNTIME_DIR/http-open"
	config="$XDG_CONFIG_HOME/http-open"
	cache="$XDG_CACHE_HOME/http-open"
	data="$XDG_DATA_HOME/http-open"

	mkdir -p "$base" "$config" "$cache" "$data"
	ln -fsT "$config" "$base/config"
	ln -fsT "$data" "$base/data"
	ln -fsT "$cache" "$base/cache"

	local -a cfg=(
		'config.load_autoconfig()'
		'# config'
		'c.auto_save.interval = 15000'
		'c.auto_save.session = True'
		'c.content.headers.user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36"'
		'c.qt.chromium.process_model = "process-per-site"'
		'c.scrolling.smooth = True'
		'c.session.lazy_restore = True'
		'c.tabs.position = "bottom"'
		'c.tabs.show = "always"'
		'c.tabs.last_close = "close"'
		'c.new_instance_open_target = "tab"'
		'c.content.plugins = True'
		'c.window.title_format = "{perc}{current_title}{title_sep}HTTP(S) Handler"'
	)

	# shellcheck disable=SC1003
	local -a exe=(
		'#!/usr/bin/env python3'
		'import sys'
		'import os'
		''
		'from inspect import getsource'
		'from qutebrowser import app'
		'from qutebrowser.qt import machinery'
		'from qutebrowser.qutebrowser import main'
		''
		''
		'machinery._initialized = False'
		'for mod in machinery.WRAPPERS:'
		'	if mod in sys.modules:'
		'		sys.modules.pop(mod)'
		''
		'exec("\n".join(map('
		'	lambda x: x \'
		'		if x.find("app.setApplicationName") == -1 \'
		'		else x.replace("qutebrowser", "http-open"),'
		'	getsource(app.run).splitlines()'
		'	)), vars(app)'
		')'
		''
		'if sys.argv[0]:'
		'	os.remove(sys.argv[0])'
		''
		'if __name__ == "__main__":'
		'	sys.exit(main())'
		''
		'# vim: ft=python'
	)

	exec=$(mktemp -u "$base/exec.XXXXX")
	[[ -f "$config/config.py" ]] || printf '%s\n' "${cfg[@]}" > "$config/config.py"

	printf '%s\n' "${exe[@]}" > "$exec"
	chmod +x "$exec"

	#	exec 2> /dev/null
	exec -a http-open \
		"$exec" --basedir "$base" \
		--desktop-file-name http-open \
		--qt-arg name http-open \
		--qt-arg qwindowicon 'internet-web-browser' \
		--untrusted-args "$@"
}

[[ -x /usr/bin/qutebrowser ]] || abort "Qutebrowser is missing, please install it."

[[ -z "$URL" ]] \
	|| match/url youtube \
	|| match/url redd.it \
	|| match/url wikipedia \
	|| match/url goolag \
	|| match/url zoom

QBCALL "$@" "$URL"
