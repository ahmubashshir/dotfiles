[include]
	path = ~/.git-auth
[user]
	email = ahmubashshir@gmail.com
	name = Mubashshir
	signingkey = 56DB0538F60D951C
[credential]
	helper = /usr/lib/git-core/git-credential-libsecret
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	gpgsign = true
[alias]
	lg = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr %an)%Creset' --abbrev-commit --date=relative
	tree = !tig
	stat = !tig status
	fsclr = !git reflog expire --expire=now --all&&git gc --prune=now
	tlog = !tig log
	dt = diff
	mt = mergetool
	unstage = reset HEAD
	last = log -1 HEAD
	visual = !gitk
	st = status
	uncommit = reset --soft HEAD^
	progress = diff --stat
	forkcfg = ! git config remote.pushDefault ahmubashshir && git config branch.master.remote ahmubashshir
	amend = commit --amend
	pg = diff --shortstat
	cftc = ! hub fork && git config remote.pushDefault ahmubashshir && git config branch.master.remote ahmubashshir
	pullmod = submodule foreach git pull
	rf = !git pull --all && git pull origin master && git push --all
	up = "![ \"$(git config \"branch.$(git rev-parse --abbrev-ref HEAD).merge\")\" = '' ] && git push -u || git push"
	rmbr = "!f() { br=$(git rev-parse --abbrev-ref HEAD);git checkout master;git branch -D \"$br\" 2>/dev/null;git push $(git remote|grep -Em 1 '(ahmubashshir|origin)') --delete \"$br\" 2>/dev/null; };f"
	cpr = !git push && hub pull-request
	hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
	gui = !gitg -a 2>/dev/null
	bclone = clone --single-branch --branch
	ch = checkout
	root = rev-parse --show-toplevel
	run = "!exec "
	rmmod = "!f(){ set -x;dir=$(git rev-parse --show-toplevel);git rm --cached \"$1\";git config --file \"$dir/.gitmodules\" --remove-section \"submodule.$1\";git config --remove-section \"submodule.$1\"; };f"
	lsmod = !git submodule status|awk '{print $2}'
	insmod = submodule add
	crbs = rebase --continue
	rbs = rebase
	mrg = merge
	cmrg = merge --continue
	amrg = merge --abort
	arbs = rebase --abort
	srbs = rebase --skip
	log = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	br = branch
	type = cat-file -t
	dump = cat-file -p
	bro = checkout --orphan
	a = add
	cm = commit
	get = pull
	put = push
	cfg = config
	gcfg = config --global
	cl = clone
	hash = rev-parse HEAD
[color]
	ui = auto
[hub]
	protocol = https

[core]
	askPass = /usr/lib/seahorse/ssh-askpass
	hooksPath = ~/.githooks
	editor = nano
[diff]
	guitool = meld
[instaweb]
	browser = chromium-browser
[merge]
	guitool = meld
	tool = nano
	summary = true
	log = true
[web]
	browser = chromium-browser
[cola]
	spellcheck = false
[gpg]
	program = gpg2
[tag]
	forceSignAnnotated = true
[difftool]
	prompt = false
[mergetool]
	prompt = false
[fetch]
	prune = true
[url "ssh://aur@aur.archlinux.org/"]
    insteadOf = "aur:"
[url "http://aur.archlinux.org/"]
	insteadOf = "pkg:"
[url "https://github.com/"]
	insteadOf = "gh:"
[url "https://gitlab.com/"]
	insteadOf = "gl:"
[url "https://gitlab.gnome.org/"]
	insteadOf = "gnome:"
[url "https://gitlab.xfce.org/"]
	insteadOf = "xfce:"
[sendemail]
	smtpServer = smtp.gmail.com
	smtpServerPort = 587
	smtpEncryption = tls
[push]
	default = current
[pull]
	rebase = true
[mergetool "nano"]
	trustExitCode = false
	cmd = nano '+r/^=======$' $MERGED
[log]
	decorate = short
	date = iso
[hub "fork"]
	remote = fork
	setDefault = true
[rebase]
	autoStash = true
