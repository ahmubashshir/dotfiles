#!/bin/bash
# shellcheck disable=SC2016
declare -A FORMATTERS
FORMATTERS=(
	# shfmt
	[sh]=shfmt
	[bash]=shfmt
	[mksh]=shfmt
	[bats]=shfmt
	# autopep
	[python]=autopep8
	[python3]=autopep8
	[python2]=autopep8-python2
	# sass
	[scss]=sass-convert
	[sass]=sass-convert
	# astyle
	[c]=astyle
	[cpp]=astyle
	[cxx]=astyle
	[cs]=astyle
	[java]=astyle
	# misc
	[js]=js-beautify
	[xml]=xmllint
)

format_file()
{
	case $1 in
		bash | bats | mksh) shfmt -w -i 0 -ci -sr -ln "$1" -kp -fn "$2" ;;
		sh) shfmt -w -i 0 -ci -sr -p -kp -fn "$2" ;;
		python | python3) autopep8 -i "$2" ;;
		python2) autopep8-python2 -i "$2" ;;
		sass | scss) sass-convert --in-place "$2" ;;
		c | cpp | cxx | cs | java)
			local mode style
			case $1 in
				c | cpp | cxx)
					mode=c
					style=allman
					;;
				cs | java)
					mode=$1
					style=gnu
					;;
			esac
			astyle --mode="$mode" --indent-namespaces --indent-classes --style="$style" --indent=tab < "$2" > "$2~"
			mv "$2~" "$2"
			;;
		js) js-beautify -itPjakxnr "$2" &> /dev/null ;;
		xml) xmllint --xmlout -o "$2" --format "$2" &> /dev/null ;;
		*) return 1 ;;
	esac
}

IFS=$'\r\n' GLOBIGNORE='*' command eval 'STAGED=($(git diff --name-only --cached))'
for file in "${STAGED[@]}"; do
	if ! [ -f "$file" ]; then
		continue
	fi
	if [ "$(head -c2 "$file")" = "#!" ]; then
		fmt=$(
			head -1 "$file" |
				tr ' ' '\n' |
				grep -Ev '^-|^(.*)=(.*)$' |
				awk '
				$1 ~ /bin\/env/	{
					enved="true";
				}; {
					intr=$0
				}; (enved == "true" && NR > 2) || NR > 1 {
					exit
				}; END {
					len=split(intr, path , "/")
					print path[len]
				};'
		)
	else
		case ${file##*.} in
			py) fmt=python ;;
			*) fmt=${file##*.} ;;
		esac
	fi
	if [[ ${fmt} ]] && [[ ${FORMATTERS[$fmt]} ]]; then
		if command -v "${FORMATTERS[$fmt]}" &> /dev/null; then
			echo "I:[${fmt^^}] Formatting $file"
			format_file "$fmt" "$file" 2> /dev/null
			git add "$file"
		else
			echo "W:Formatter for $fmt [${FORMATTERS[$fmt]}] is not installed."
			unset "FORMATTERS[$fmt]"
		fi
	fi
done
