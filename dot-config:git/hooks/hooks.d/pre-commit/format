#!/bin/bash
# shellcheck disable=SC2016
declare -A FORMATTERS f
FORMATTERS=(
	# shfmt
	[sh]=shfmt
	[bash]=shfmt
	[mksh]=shfmt
	[bats]=shfmt
	# autopep
	[python]=autopep8
	[python3]=autopep8
	[python2]=autopep8-python2
	# sass
	[scss]=sass-convert
	[sass]=sass-convert
	[css]=css-beautify
	# astyle
	[c]=astyle
	[cpp]=astyle
	[cxx]=astyle
	[cs]=astyle
	[java]=astyle
	# misc
	[js]=js-beautify
	[xml]=xmllint
	[lua]=lua-format
)

if tput setaf 0 &> /dev/null; then
	f[reset]="$(tput sgr0)"
	f[bold]="$(tput bold)"
	f[blue]="${f[bold]}$(tput setaf 4)"
	f[green]="${f[bold]}$(tput setaf 2)"
	f[red]="${f[bold]}$(tput setaf 1)"
	f[yellow]="${f[bold]}$(tput setaf 3)"
else
	f[reset]="\e[0m"
	f[bold]="\e[1m"
	f[blue]="${f[bold]}\e[34m"
	f[green]="${f[bold]}\e[32m"
	f[red]="${f[bold]}\e[31m"
	f[yellow]="${f[bold]}\e[33m"
fi
readonly f

format_file()
{
	case $1 in
		bash | bats | mksh) shfmt -w -i 0 -ci -sr -bn -ln "$1" -kp -fn "$2" ;;
		sh) shfmt -w -i 0 -ci -sr -p -kp -fn "$2" ;;
		python | python3) autopep8 -i "$2" ;;
		python2) autopep8-python2 -i "$2" ;;
		sass | scss) sass-convert --in-place "$2" ;;
		c | cpp | cxx | cs | java)
			local mode style
			case $1 in
				c | cpp | cxx)
					mode=c
					style=allman
					;;
				cs | java)
					mode=$1
					style=gnu
					;;
			esac
			astyle --mode="$mode" --indent-namespaces --indent-classes --style="$style" --indent=tab "$2"
			rm -f "$2.orig"
			;;
		js) js-beautify -tPjakxnr "$2" 2>&1 > /dev/null ;;
		css) css-beautify -rnt --space-around-combinator "$2" > /dev/null ;;
		xml) xmllint --xmlout -o "$2" --format "$2" 2>&1 > /dev/null ;;
		lua) lua-format -i "$2" 2>&1 > /dev/null ;;
		*) return 1 ;;
	esac
}
IFS=$'\r\n' GLOBIGNORE='*' command eval 'STAGED=($(git diff --name-only --cached))'
for file in "${STAGED[@]}"; do
	if ! [ -f "$file" ] || [ -L "$file" ]; then
		continue
	fi
	test -f "${file%/*}/.hookignore" \
		&& grep -xFq "$id" "${file%/*}/.hookignore" \
		&& continue
	if [ "$(head -c2 "$file")" = "#!" ]; then
		fmt=$(
			head -1 "$file" \
				| tr ' ' '\n' \
				| grep -Ev '^-|^(.*)=(.*)$' \
				| awk '
				$1 ~ /bin\/env/	{
					enved="true";
				}; {
					intr=$0
				}; (enved == "true" && NR > 2) || NR > 1 {
					exit
				}; END {
					len=split(intr, path , "/")
					print path[len]
				};'
		)
	else
		case ${file##*.} in
			py) fmt=python ;;
			*) fmt=${file##*.} ;;
		esac
	fi
	if [[ ${fmt} ]] && [[ ${FORMATTERS[$fmt]} ]]; then
		if command -v "${FORMATTERS[$fmt]}" 2>&1 > /dev/null; then
			printf '  %s-> %s[%s] Formatting %s\n' "${f[blue]}" \
				"${f[green]}" "${f[blue]}${fmt,,}${f[green]}" "${f[yellow]}$file${f[reset]}"
			format_file "$fmt" "$file" 2> /dev/null
			git add "$file"
		else
			printf '  %s-> %s[%s] Formatter for %s is not installed.%s\n' "${f[blue]}" "${f[yellow]}" \
				"${f[green]}${fmt,,} [${FORMATTERS[$fmt]}]${f[yellow]}" "${f[reset]}"
			unset "FORMATTERS[$fmt]"
		fi
	fi
done
